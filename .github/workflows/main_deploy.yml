name: Deploy and Validate Metadata

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  sfdxvalidate:
    runs-on: ubuntu-latest

    steps:
      - name: 📦 Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🧰 Install Node.js, SFDX CLI, jq and sgd plugin
        run: |
          sudo apt-get install jq
          npm install -g sfdx-cli
          sfdx --version
          npm install -g sfdx-git-delta@3.3.0

      - name: 🔐 Auth to Salesforce
        run: |
          echo "${{ secrets.SFDX_AUTH_URL }}" > auth_url.txt
          sfdx auth:sfdxurl:store -f auth_url.txt -a deployOrg --setdefaultusername

      - name: 🔄 Préparer Git pour delta
        run: git fetch origin main

      - name: ⚙️ Générer le delta avec sfdx-git-delta
        run: |
          mkdir -p .temp
          sfdx sgd:source:delta --to HEAD --from origin/main --output .temp --generate-delta
          echo "📂 Contenu du dossier .temp :"
          ls -R .temp

      - name: 🚀 Déploiement (Check Only)
        if: github.ref == 'refs/heads/main' && success()
        run: |
          if [ -f ".temp/package/package.xml" ]; then
            echo "Déploiement en mode simulation avec exécution des tests..."
            sfdx force:source:deploy -x .temp/package/package.xml -u deployOrg --checkonly --testlevel RunLocalTests
          else
            echo "⚠️ Aucun changement à déployer."
          fi

      - name: 🧪 Lancer les tests Apex (obligatoire si pas de delta)
        run: |
          mkdir -p .test-results
          TEST_RUN_ID=$(sfdx force:apex:test:run --targetusername deployOrg --testlevel RunLocalTests --resultformat json --outputdir .test-results --wait 10 | jq -r '.result.testRunId')
          echo "TEST_RUN_ID=$TEST_RUN_ID" >> $GITHUB_ENV

      - name: 📝 Générer le rapport des tests
        run: |
          sfdx force:apex:test:report -i ${{ env.TEST_RUN_ID }} --targetusername deployOrg --resultformat human --codecoverage > .test-results/test-report.txt
          cat .test-results/test-report.txt

      - name: 📤 Publier le rapport des tests
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: .test-results
